Motivation for chosen methodoligy
  Buttom-up may lead to over-engineering overly-contstrained solution due to lack of overview.
  Thus trying to find the optimal general solution has a big risk of trying to reshape your problem to a good solution.
  Top-down may lead to under-engineering, leaving the tool useless for anything but the one purpose that sparked the development.


%Jacobson’s original usage scenarios were intentionally informal. He found out that people did — and still do — resist writing them whenever they become more formal. In fact, when I once asked him about formal models for use cases, Jacobson replied, “Oh, I have a formal model for use cases, all right. The only problem is that no one wants to use it.” http://alistair.cockburn.us/Use+cases%2c+ten+years+later

%A use case should focus on a goal or an intent. Goals come in different shapes and sizes from very abstract and high level downto very concrete actions.


%FROM http://alistair.cockburn.us/Use+cases%2c+ten+years+later
%Only Use Them When the Form is Appropriate

%A use case form is really just a stylized way of writing, a form of prose having two sections. The first section describes a basic scenario containing actions and interactions. The second section presents a set of scenario fragments, describing how the behavior differs under varying circumstances. This form of writing can be used any time to describe behavior with alternatives, such as black-box requirements, business process, and system design descriptions.

%As system black-box requirements, the use case describes: the user does this; the system does that; the system talks to another system; something goes wrong; the system now does this instead; and so on. It says very well what the system must accomplish, without saying how the system is to do it, and it does not in any way presuppose the use of object-oriented (or any other style of) design.

%As business process descriptions, the use case describes: the customer does this; the clerk does that; the clerk hands something to another department; the other department does something else; and so on. When things go wrong, some department rejects a piece of work; it goes to a different department; and so on. These sorts of descriptions are relatively easy for business people to write and very easy for untrained people to read, and so they have a growing use in business process reengineering work.

%As design documentation, the use case describes: the user does this; some first component does a set of things; the component forwards a request to a second component; and so on. Under various conditions, the sequencing between components is different, et cetera. Use cases are only rarely used for design documentation, because there are so many other ways to document a design.

%The thing to keep in mind is that the use case form, namely, a scenario of behavior followed by scenarios of alternate behavior, fits a certain set of writing needs. Reach for use cases when that form is appropriate, and drop them as soon as the writing needs don’t fit that profile.


%FitNesse enables customers, testers, and programmers to learn what their software should do, and to automatically compare that to what it actually does do. It compares customers' expectations to actual results.
%FROM:http://www.fitnesse.org/FitNesse.UserGuide.OneMinuteDescription